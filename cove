#! /usr/bin/fish

# Variables that'll depend on installation
set repo_dir ~/Documents/bib

# Variables that are expected to stay constant across installations
set key_format ~/.config/cove/key_format.rsc # where to store resource file for bibtool key formatting
set fzf_format ~/.config/cove/fzf_format.rsc
set repo $repo_dir/repo.bib
set doi_list $repo_dir/doi
set fzf_list $repo_dir/.fzf
set temp_file /tmp/cove_temp.bib
set temp_repo /tmp/cove_temp_repo.bib

# set default behaviour for no argument
if ! count $argv > /dev/null
  set argv open
end

# set behaviour for core commands
switch $argv[1]
  case cite # Find bibtex keys by fuzzy search
    echo -e (cat $fzf_list) | fzf --ansi | awk 'NF{ print $NF }'
    exit
  case title # Find paper titles by fuzzy search
    echo -e (cat $fzf_list) | fzf --ansi | sed 's/.*[0-9]\.//' | sed 's/\. \[.*//'
    exit
  case link # Link pdfs to records
    if ! echo $argv[2] | grep -q '\.pdf$' # check that a pdf is supplied as well
      echo 'Please supply a valid pdf!'
      exit
    end
    echo -e (cat $fzf_list) | fzf --ansi | awk 'NF{ print $NF }' > $temp_file # Choose a record by fuzzy search
    if test -s $temp_file # check that fuzzy search was not cancelled
      mv $argv[2] $repo_dir/papers/(cat $temp_file).pdf # move to paper repository
    end
    exit
  case unlink # Remove linked pdf from repository
    echo -e (cat $fzf_list) | fzf --ansi | awk 'NF{ print $NF }' > $temp_file
    rm -f $repo_dir/papers/(cat $temp_file).pdf
    exit
  case open # Open a linked pdf
    echo -e (cat $fzf_list) | fzf --ansi | awk 'NF{ print $NF }' > $temp_file # Choose a record by fuzzy search
    if ! test -s $temp_file # Check that search was not cancelled
      exit
    else if test -f $repo_dir/papers/(cat $temp_file).pdf # Check if file is in repository
      zathura $repo_dir/papers/(cat $temp_file).pdf &
    else
      echo 'PDF not found! Are you sure you linked it?'
    end
    exit
  end

# Otherwise treat args as a list of doi's

# check for doi's already in repo
for doi in $argv
  if grep -xq $doi $doi_list
    echo One or more entries already in repo!
    exit
  end
end

# Download bibtex records
# -s = silent; -L = redirect location; -H = add custom header to request
rm -f $temp_file
for doi in $argv
  curl -sLH 'Accept: application/x-bibtex' http://dx.doi.org/$doi >> $temp_file
end

# Check for broken doi links
if grep 'DOI Not Found' $temp_file
  echo One or more invalid DOIs found!
  exit
end

# Update doi list
echo $argv | sed 's/ /\n/g' >> $doi_list

# manage key with bibtool
rm -f $temp_repo
bibtool -r $key_format $repo $temp_file | cat > $temp_repo
mv $temp_repo $repo

# generate file for fzf searching
bibtool -r $fzf_format $repo | grep '^@' | sed 's/.*{\s*/\\\\n/' | sed 's/[+,]/ /g' | sed 's/+/,/g' | sed 's/e\[/\\\\e[/g' > $fzf_list
